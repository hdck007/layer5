{"version":3,"sources":["webpack://Layer5/./src/components/image.js","webpack://Layer5/./src/sections/Learn-Layer5/learnlayer5.style.js","webpack://Layer5/./src/components/Learn-Components/Card-Component/learn-card.style.js","webpack://Layer5/./src/components/Learn-Components/Card-Component/index.js","webpack://Layer5/./src/sections/Learn-Layer5/index.js","webpack://Layer5/./src/pages/learn-ng.js"],"names":["childImageSharp","extension","publicURL","alt","rest","G","image","gatsbyImageData","className","src","LearnLayer5GridWrapper","styled","CardComponentWrapper","tutorial","Link","to","fields","learnpath","style","backgroundColor","frontmatter","themeColor","title","status","description","learningPaths","cardImage","data","useStaticQuery","allMdx","nodes","map","index","key","theme","Navigation","Footer"],"mappings":"uJAiBA,IAZc,SAAC,GAA6D,IAA3DA,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,IAAQC,GAAW,4DACzE,OAAKJ,GAAiC,QAAdC,EAOf,gBAAC,EAAAI,EAAD,eAAaC,MAAON,EAAgBO,iBAAqBH,EAAzD,CAA+DD,IAAKA,KALzE,uBAAKK,UAAU,4BACb,uBAAKC,IAAKP,EAAWC,IAAKA,O,2ICPrBO,EAAyBC,oBAAH,oFAAGA,CAAH,8UAYtBC,EAAuBD,oBAAH,kFAAGA,CAAH,k8C,WCAjC,EAZoBA,oBAAH,oEAAGA,CAAH,0M,WC+BjB,EA5BsB,SAAC,GAAgB,IAAfE,EAAc,EAAdA,SAEtB,OACE,gBAAC,EAAD,KACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAASG,OAAOC,UAAWT,UAAU,UAC7C,uBAAKU,MAAO,CAACC,gBAAgBN,EAASO,YAAYC,YAAab,UAAU,eACvE,2BACE,uBAAKA,UAAU,aACb,0BAAKK,EAASO,YAAYE,OAExBT,EAASO,YAAYG,OAAS,yBAAG,oCAAqB,MAG1D,uBAAKf,UAAU,kBACb,yBAAIK,EAASO,YAAYI,aACzB,yBAAIX,EAASO,YAAYK,cAAzB,qBAIJ,uBAAKjB,UAAU,cACb,gBAAC,IAAD,iBAAWK,EAASO,YAAYM,UAAhC,CAA2CvB,IAAKU,EAASO,YAAYE,cCiCjF,EArDuB,WACrB,IAAMK,GAAOC,oBAAe,aA6B5B,OACE,gBAAClB,EAAD,KACE,gBAACE,EAAD,KACE,2BACE,4CACA,uBAAKJ,UAAU,IACb,uEACA,6EAGJ,uBAAKA,UAAU,kBAEXmB,EAAKE,OAAOC,MAAMC,KAAI,SAAClB,EAASmB,GAAV,OACpB,gBAAC,EAAD,CAAenB,SAAUA,EAAUoB,IAAKD,SAZlD,O,iCCVJ,EAfwB,WACtB,OACE,gBAAC,KAAD,CAAeE,MAAOA,KACpB,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAKZ,MAAM,wBACTE,YAAY,yGACZlB,MAAM,0BACR,gBAAC6B,EAAA,EAAD,MACA,gBAAC,EAAD,MACA,gBAACC,EAAA,EAAD","file":"component---src-pages-learn-ng-js-adf8e8587520eb1f4351.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\n\nconst Image = ({ childImageSharp, extension, publicURL, alt, ...rest }) => {\n  if (!childImageSharp && extension === \"svg\") {\n    return (\n      <div className=\"old-gatsby-image-wrapper\">\n        <img src={publicURL} alt={alt} />\n      </div>\n    );\n  } else {\n    return <GatsbyImage image={childImageSharp.gatsbyImageData} {...rest} alt={alt} />;\n  }\n};\n\nexport default Image;\n","import styled from \"styled-components\";\n\nexport const LearnLayer5GridWrapper = styled.div`\n    .page-header-section {\n        height: 15rem;\n        text-align: center;\n        background: rgb(71,126,150);\n        background: linear-gradient(250deg, rgba(71,126,150,1) 0%, rgba(0,179,159,1) 35%, rgba(60,73,79,1) 100%);\n        h1 {\n            line-height: 15rem;\n            color: white;\n        }\n    }\n`;\nexport const CardComponentWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 8rem 4rem;\n    .learning-paths{\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        padding: 2rem;\n        margin: 2rem;\n    }\n    .card-parent{\n        border-radius: 2rem;\n    }\n    .link-a{\n        color: black;\n    }\n\n    .card-head{\n        display: flex;\n        padding: 1rem;\n        span{\n            background-color: white;\n            border-radius : 1rem;\n            padding: 0 0.6rem;\n            font-size:0.8rem;\n        }\n\n    }\n\n    .card-head-desc{\n        padding: 0 1rem;\n        p{\n            font-size: 1rem;\n        }\n    \n    }\n    .card-image{\n        text-align: center;\n        \n        img{\n            min-height: 150px;\n            max-width: 150px;\n            padding: 1rem;\n        }\n    }\n    @media(max-width:1300px){\n        .learning-paths{\n            \n            padding: 2rem 1rem;\n            margin: 2rem 1rem;\n        }\n    }\n    @media(max-width:1100px){\n        .learning-paths{\n            grid-template-columns: 1fr 1fr;\n            padding: 2rem 0rem;\n            margin: 2rem 0rem;\n        }\n    }\n    @media(max-width:760px){\n        padding: 8rem 1rem;\n        .learning-paths{\n            grid-template-columns: 1fr;\n            padding: 2rem 0rem;\n            margin: 2rem 0rem;\n        }\n     \n    }\n\n`;\n","import styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n    max-width:350px;\n    margin: 0 1rem;\n    border-radius: 1rem;\n    @media(max-width: 1300px){\n        margin: 1rem;\n    }\n    @media(max-width: 760px){\n        margin: 1rem 0;\n    }\n`;\n\nexport default CardWrapper;","import React from \"react\";\nimport CardWrapper from \"./learn-card.style\";\nimport Image from \"../../image\";\nimport { Link } from \"gatsby\";\n\nconst CardComponent = ({tutorial}) => {\n\n  return (\n    <CardWrapper>\n      <Link to={tutorial.fields.learnpath} className='link-a'>\n        <div style={{backgroundColor:tutorial.frontmatter.themeColor}} className=\"card-parent\">\n          <div>\n            <div className=\"card-head\">\n              <h3>{tutorial.frontmatter.title}</h3>\n              {\n                tutorial.frontmatter.status ? <p><span>New</span></p>:null\n              }\n            </div>\n            <div className=\"card-head-desc\">\n              <p>{tutorial.frontmatter.description}</p>\n              <p>{tutorial.frontmatter.learningPaths} learning paths</p>  \n            </div>\n            \n          </div>\n          <div className=\"card-image\">\n            <Image {...tutorial.frontmatter.cardImage} alt={tutorial.frontmatter.title} />\n          </div>\n        </div>\n      </Link>\n    </CardWrapper>\n  );\n};\n\nexport default CardComponent;\n","import React from \"react\";\nimport { LearnLayer5GridWrapper , CardComponentWrapper} from \"./learnlayer5.style\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport CardComponent from \"../../components/Learn-Components/Card-Component\";\n\nconst LearnPathsPage = () => {\n  const data = useStaticQuery(graphql`query allLearnPath {\n    allMdx(\n        filter: {fields: {collection: {eq: \"content-learn\"}, slug: {glob: \"/*/\"}}}\n    ) {\n        nodes {\n            id,\n            frontmatter{\n              title,\n              description,\n              themeColor,   \n              learningPaths                 \n              cardImage{\n                childImageSharp {\n                  gatsbyImageData(width: 200, layout: CONSTRAINED)\n                }\n                extension\n                publicURL\n              },\n              status\n            }\n            fields {\n                slug\n                learnpath\n            }\n        }\n    }\n}\n`);\n\n  return (\n    <LearnLayer5GridWrapper>\n      <CardComponentWrapper>\n        <div>\n          <h1>Learning Paths</h1>\n          <div className=\"\">\n            <p>Learn how to service mesh.Learn how to run</p>\n            <p>Meshery, install Istio and deploy a sample app</p>\n          </div>\n        </div>\n        <div className=\"learning-paths\">\n          {\n            data.allMdx.nodes.map((tutorial,index) => (\n              <CardComponent tutorial={tutorial} key={index} />\n            ))\n          }\n        </div>\n      </CardComponentWrapper>\n    );\n    </LearnLayer5GridWrapper>\n  );\n};\n\nexport default LearnPathsPage;","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Navigation from \"../sections/General/Navigation\";\nimport LearnPathsPage from \"../sections/Learn-Layer5\";\nimport Footer from \"../sections/General/Footer\";\nimport { GlobalStyle } from \"../sections/app.style\";\nimport theme from \"../theme/app/themeStyles\";\n\n\nconst LearnLayer5Page = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO title=\"Learn to Service Mesh\"\n          description=\"Learn Service Meshes: Istio, Linkerd, Envoy, Consul, Maesh, Kuma, App Mesh, Citrix, Tanzu Service Mesh\"\n          image=\"/images/workshops.png\" />\n        <Navigation />\n        <LearnPathsPage />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\nexport default LearnLayer5Page;\n"],"sourceRoot":""}